{
  "_args": [
    [
      {
        "raw": "gulp-pleeease@^2.0.2",
        "scope": null,
        "escapedName": "gulp-pleeease",
        "name": "gulp-pleeease",
        "rawSpec": "^2.0.2",
        "spec": ">=2.0.2 <3.0.0",
        "type": "range"
      },
      "/Users/pamegli/dev/hybridsearch/source/material-style-1.5/material-style-gulp"
    ]
  ],
  "_from": "gulp-pleeease@>=2.0.2 <3.0.0",
  "_id": "gulp-pleeease@2.0.2",
  "_inCache": true,
  "_location": "/gulp-pleeease",
  "_nodeVersion": "5.0.0",
  "_npmUser": {
    "name": "efrafa",
    "email": "dano.husar@gmail.com"
  },
  "_npmVersion": "3.3.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-pleeease@^2.0.2",
    "scope": null,
    "escapedName": "gulp-pleeease",
    "name": "gulp-pleeease",
    "rawSpec": "^2.0.2",
    "spec": ">=2.0.2 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-pleeease/-/gulp-pleeease-2.0.2.tgz",
  "_shasum": "f61b83f1426b41beb0a04e0785de868af2faa726",
  "_shrinkwrap": null,
  "_spec": "gulp-pleeease@^2.0.2",
  "_where": "/Users/pamegli/dev/hybridsearch/source/material-style-1.5/material-style-gulp",
  "author": {
    "name": "Daniel Husar",
    "email": "dano.husar@gmail.com",
    "url": "https://github.com/danielhusar"
  },
  "bugs": {
    "url": "https://github.com/danielhusar/gulp-pleeease/issues"
  },
  "dependencies": {
    "gulp-util": "^3.0.1",
    "pleeease": "^4.0.1",
    "through2": "^2.0.0",
    "vinyl-sourcemaps-apply": "^0.1.4"
  },
  "description": "Postprocess CSS with ease.",
  "devDependencies": {
    "gulp": "^3.8.11",
    "gulp-concat": "^2.6.0",
    "gulp-sourcemaps": "^1.2.8",
    "mocha": "*",
    "should": "^5.2.0",
    "stream-assert": "^2.0.2"
  },
  "directories": {},
  "dist": {
    "shasum": "f61b83f1426b41beb0a04e0785de868af2faa726",
    "tarball": "https://registry.npmjs.org/gulp-pleeease/-/gulp-pleeease-2.0.2.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "e95b176bc5b64a4472774533d8a84b58d7d1b6ee",
  "homepage": "https://github.com/danielhusar/gulp-pleeease#readme",
  "keywords": [
    "gulpplugin",
    "media",
    "queries",
    "mediaqueries",
    "pleeease"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "efrafa",
      "email": "dano.husar@gmail.com"
    },
    {
      "name": "iamvdo",
      "email": "vincent@iamvdo.me"
    }
  ],
  "name": "gulp-pleeease",
  "optionalDependencies": {},
  "readme": "# [gulp](http://gulpjs.com)-pleeease [![Build Status](https://secure.travis-ci.org/danielhusar/gulp-pleeease.svg?branch=master)](http://travis-ci.org/danielhusar/gulp-pleeease)\n\nGulp plugin for [pleeease](https://github.com/iamvdo/pleeease/)\n\nSee [pleeease.io](http://pleeease.io/docs) for documentation.\n\n## Install\n\n```bash\nnpm install --save-dev gulp-pleeease\n```\n\n## Example\n\n```javascript\nvar gulp     = require('gulp');\nvar pleeease = require('gulp-pleeease');\n\ngulp.task('css', function () {\n  gulp.src('./src/*.css')\n  .pipe(pleeease())\n  .pipe(rename({\n    suffix: '.min',\n    extname: '.css'\n  }))\n  .pipe(gulp.dest('./dest'));\n});\n```\n\nYou can also use `out` option (and it's preferable for good sourcemaps):\n\n```javascript\ngulp.task('css', function () {\n  gulp.src('./src/*.css')\n  .pipe(pleeease({\n    out: 'out.min.css'\n  }))\n  .pipe(gulp.dest('./dest'));\n});\n```\n\n## Preprocessors support\n\nAs simple as it looks, no need for specific gulp modules:\n\n```javascript\nvar gulp     = require('gulp');\nvar pleeease = require('gulp-pleeease');\n\ngulp.task('css', function () {\n  gulp.src('./src/*.scss')\n  .pipe(pleeease({\n    sass: true\n  }))\n  .pipe(gulp.dest('./dest'));\n});\n```\n\nOr maybe, if you have imports:\n\n```javascript\nvar gulp     = require('gulp');\nvar pleeease = require('gulp-pleeease');\n\ngulp.task('css', function () {\n  gulp.src('./src/*.scss')\n  .pipe(pleeease({\n    sass: {\n      includePaths: ['path/to/include']\n    }\n  }))\n  .pipe(gulp.dest('./dest'));\n});\n```\n\nYou can use Sass, LESS or Stylus.\n\n## Source map support\n\nUsing gulp-sourcemaps. To get good sourcemaps, you should always specify `base` option in `gulp.src`. You will get inline sourcemaps.\n\n```javascript\nvar gulp       = require('gulp');\nvar pleeease   = require('gulp-pleeease');\nvar sourcemaps = require('gulp-sourcemaps');\n\ngulp.task('css', function () {\n  gulp.src('./src/*.css', {base: '.'})\n    .pipe(sourcemaps.init())\n      .pipe(pleeease())\n    .pipe(sourcemaps.write())\n    .pipe(gulp.dest('./dest'));\n});\n```\n\nAnd even with preprocessors. Here, using Stylus, and with sourcemaps as a separate file:\n\n```javascript\nvar gulp       = require('gulp');\nvar pleeease   = require('gulp-pleeease');\nvar sourcemaps = require('gulp-sourcemaps');\n\ngulp.task('css', function () {\n  gulp.src('./src/*.styl', {base: '.'})\n    .pipe(sourcemaps.init())\n      .pipe(pleeease({\n        stylus: {\n          paths: ['path/to/include']\n        }\n      }))\n    .pipe(sourcemaps.write('.'))\n    .pipe(gulp.dest('./dest'));\n});\n```\n\n## Options\n\nSame as [pleeease](http://pleeease.io/docs)\n\n\n## License\n\nMIT Â© [Daniel Husar](https://github.com/danielhusar)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/danielhusar/gulp-pleeease.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "version": "2.0.2"
}
